#!/usr/bin/env node
var package = require("../package")
var Umd = require("../")

var USAGE = "Usage: " + package.name + " [options] COMMAND"
var OPTIONS = [
  "Options:",
  "  -h, -?, --help  Display this help and exit."
].join("\n")
var COMMANDS = [
  "Commands:",
  "  iife FILE  Wrap in an immediately-invoked function expression.",
  "  help       Display this help and exit."
].join("\n")

function help() {
  info(USAGE)
  info()
  info(OPTIONS)
  info()
  info(COMMANDS)
}

function info(string) { process.stdout.write((string || "") + "\n") }
function warn(string) { process.stderr.write((string || "") + "\n") }

var opts = require("nopt")({
  "help": Boolean
}, {
  "h": "help",
  "?": "help"
})
opts.command = opts.argv.remain.shift()
opts.args = opts.argv.remain

switch (true) {
  case opts.help:
  case !opts.command:
  case opts.command == "help":
    help()
    process.exit()
    break

  case opts.command == "iife":
    if (opts.args.length != 1) {
      warn(package.name + ": Please give a file to `iife'.")
      process.exit(1)
    }

    umdify(Umd.Iife, opts.args[0])
    break

  default:
    warn("Unrecognized command: " + opts.command)
    warn(USAGE)
    process.exit(1)
}

function umdify(klass, file) {
  try {
    var output = new klass().wrap(file)
    process.stdout.write(output)
  }
  catch (ex) {
    warn(package.name + ": " + ex)
    process.exit(1)
  }
}
